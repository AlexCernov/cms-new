@model CMS.ViewModels.CreateComiteeViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts {
    <meta charset="utf-8" />
    <script>
         function convert(terms) {
                $("#convertPC").value = terms;
                alert(terms);
            }
        $(function () {

            function split(val) {
                return val.split(/,\s*/);
            }
            function extractLast(term) {
                return split(term).pop();
            }

           
            
            $("#multipleAuto").bind("keydown", function (event) {
                if (event.keyCode === $.ui.keyCode.TAB &&
                    $(this).autocomplete("instance").menu.active) {
                    event.preventDefault();
                }
            })
                .autocomplete({
                    minLength: 1,
                    source: function (request, response) {
                        // delegate back to autocomplete, but extract the last term
                        $.getJSON("/PCMembers/All", { term: extractLast(request.term) }, response);
                    },
                    focus: function () {
                        // prevent value inserted on focus
                        return false;
                    },
                    select: function (event, ui) {
                        var terms = split(this.value);
                        // remove the current input
                        terms.pop();
                        // add the selected item
                        terms.push(ui.item.value);
                        // add placeholder to get the comma-and-space at the end
                        terms.push("");
                        this.value = terms.join(", ");
                        console.log(terms);
                        return false;
                    }
                });
        });
    </script>
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div>
    <div class="form-group">
        <div class="row">
            <h2>Comitee Creation Page</h2>
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <div class="row">
            @Html.LabelFor(model => model.Comitee.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Comitee.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comitee.Name, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-sm-1">
                <label class="col-form-label-sm">Enter the PCMembers:</label>
            </div>
            <div class="col-md-offset-1 col-md-9 col-sm-11">
                <input class="form-control col-md-10" id="multipleAuto">
            </div>
        </div>
    </div>


    <div class="form-group">
        <div class="row">
            <div class="col-sm-10">
                <a class="btn btn-primary" href="Index" role="button">Return to Comitees Page</a>
            </div>
            <input type="hidden" id="convertPC" name="rawPCMembers" />
            <div class="col-sm-2">  
                <input type="submit" value="Create" class="btn btn-primary" onclick="convert"/>
            </div>
        </div>
    </div>
</div>
}

